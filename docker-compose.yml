services:
  # MongoDB service
  mongodb:
    image: mongo:7.0
    container_name: bucketball_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: bucketball
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - bucketball_network

  # Redis service
  redis:
    image: redis:7.2-alpine
    container_name: bucketball_redis
    restart: unless-stopped
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bucketball_network

  # Backend application
  backend:
    build: .
    container_name: bucketball_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/bucketball?authSource=admin
      - MONGODB_DB=bucketball
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=redis123
      - REDIS_DB=0
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - mongodb
      - redis
    networks:
      - bucketball_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
  redis_data:

networks:
  bucketball_network:
    driver: bridge
